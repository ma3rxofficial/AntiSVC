import requests, time, random def proxy(user, password): n = requests.post("https://lichess.org/login", data={"username" : user, "password" : password, "remember" : "true"}, headers={"X-Requested-With" : "XMLHttpRequest", "User-Agent" : "Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/69.0"}, timeout=2) return n def create_session(user, password): return proxy(user, password).cookies def create_token(user, password): s = create_session(user, password) if (not s): return 0 r = requests.post("https://lichess.org/account/oauth/token/create", data={"description" : str(random.randint(100, 10000)), "scopes[]" : "msg:write"}, cookies=s, headers = {"Origin" : "https://lichess.org", "User-Agent" : "Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/69.0"}).text try: token = r.split("<code>")[1].split("</code>")[0] except: return 2 return token def sendspam(user, msg, token): r = requests.post("https://lichess.org/inbox/"+user, {"text" : msg}, headers={"Authorization" : "Bearer "+token, "User-Agent" : "Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/69.0"}) print(user, token, r.status_code, r.text) return r.status_code msg = input() #tokens = open("tokens").read().split("\n") users = open("targets").read().split("\n") #tI = 0 #for uI in range(len(users)): # if (sendspam(users[uI], msg, tokens[tI]) == 429): tI = (tI + 1) % len(tokens) # time.sleep(5) u = 0 for i in open("accounts").read().split("\n"): token = create_token(i.split(":")[0], i.split(":")[1]) print(i, token) if (not token): continue open("tokens", "a").write(str(token)+"\n") time.sleep(1) while (sendspam(users[u], msg, token) in [200, 400]): u += 1 time.sleep(5)
